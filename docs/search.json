[
  {
    "objectID": "index.html#what-is-r",
    "href": "index.html#what-is-r",
    "title": "MATH 012: R-Labs",
    "section": "What is R?",
    "text": "What is R?\nR is a versatile computer program that enables a wide range of statistical calculations and data analysis. Developed and maintained largely through voluntary contributions from statisticians globally, R is a free and open-source tool available on most operating systems, including Windows, Mac OS, and Linux.\nBeyond statistical analysis, R also excels in creating graphics and functions as a full-fledged programming language. In this series of labs, we will only begin to explore the extensive capabilities that R offers."
  },
  {
    "objectID": "index.html#how-can-we-run-r",
    "href": "index.html#how-can-we-run-r",
    "title": "MATH 012: R-Labs",
    "section": "How can we run R?",
    "text": "How can we run R?\nThe base R environment is always accessible, but most users prefer to work with an Integrated Development Environment (IDE) for a more user-friendly interface. RStudio, for example, is one of the most popular IDEs today.\n\n\n\n\n\nAlthough you can download and run R locally on your system, it’s not necessary for our labs, as they can be completed directly within self-contained webpages. We recommend sticking to the content provided on the lab webpages to familiarize yourself with the syntax. Once you feel comfortable with the language, you can easily run R on your laptop."
  },
  {
    "objectID": "index.html#r-lab-procedure-during-recitations",
    "href": "index.html#r-lab-procedure-during-recitations",
    "title": "MATH 012: R-Labs",
    "section": "R-Lab procedure during recitations",
    "text": "R-Lab procedure during recitations\nIn most recitation sessions, we will dedicate about 20 minutes to a lab focused on R programming and data analysis.\n\nEach lab includes a brief tutorial that you can easily follow.\nAt the end of each lab, you’ll find a few questions that you can answer based on the lab materials.\nFinally, complete the Gradescope lab quiz, which is directly based on the lab questions.\n\nWhile lab topics are often closely related to class content, they may diverge, especially around the middle of the semester. Feel free to discuss the questions with fellow students, and don’t hesitate to ask the TA for help!"
  },
  {
    "objectID": "Lab_2.html",
    "href": "Lab_2.html",
    "title": "Lab 2",
    "section": "",
    "text": "While defining variables (objects), the significance of variable naming in programming is immense. Selecting clear and descriptive names for variables is vital for several reasons:\n\nReadability and Understandability: Clear and descriptive variable names enhance the readability and comprehension of your code.\nMaintainability and Debugging: Thoughtfully named variables simplify code maintenance and debugging processes.\nCollaboration: In a team setting, consistent and clear variable naming conventions are crucial for effective collaboration.\nSelf-Documentation: Meaningful variable names serve as self-documentation, making the code more intuitive.\nCode Reusability: Adopting good variable naming practices supports greater code reusability.\n\nSometimes, clear naming requires using multiple words in a variable name, but spaces are not allowed. A common approach is to separate words with underscores, as demonstrated previously, such as \\(\\texttt{morning\\_temperature\\_august}\\).\n\n\nLet us assign relevant names to the following variables:\n\n\n\n#\nFeature\nValue\n\n\n\n\n1\nBody temperature in Fahrenheit\n98\n\n\n2\nNumber of shoes for Sam\n11\n\n\n3\nWeight of a elephant in pound\n12,050\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nA vector is a sequence of finite elements and serves as the basic object in R. For example, a single number like “3” is considered a vector of length 1. To create a vector, we use the \\(\\texttt{c()}\\) function, where the name is an abbreviation of “combine.”\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAs learned, we can assign a descriptive variable name to the vector:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nOne of the powerful features of vectors in R is the ability to perform the same calculation on every element with a single command, i.e., element-wise operation. For example, when converting weights from pounds to kilograms, we can multiply 0.454. This operation can be applied to all the numbers in a vector simultaneously:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nTo access a specific number in a vector, you add square brackets after the vector name and place the index of the desired element inside the brackets. The “index” refers to the position of the item within the vector, with the first element having an index of 1, and so on. For example, the third element of the vector \\(\\texttt{weight\\_kg}\\) is:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nAs we discussed in class, we can use the “mean” and “median” to measure the central tendency of our data, with the mode also being an option in some cases. In R, the functions \\(\\texttt{mean()}\\) and \\(\\texttt{median()}\\) can be used to obtain the mean and median of a vector, respectively.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nWe can also easily calculate the summation and length of a vector by using the functions, \\(\\texttt{sum()}\\) and \\(\\texttt{length()}\\).\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nCompute the mean of \\(\\texttt{weight\\_kg}\\) by using \\(\\texttt{sum()}\\) and \\(\\texttt{length()}\\) functions. (Do not use \\(\\texttt{mean()}\\) function.)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\nBMI is a measurement of a person’s leanness or corpulence based on their height and weight, and is intended to quantify tissue mass. It is widely used as a general indicator of whether a person has a healthy body weight for their height and it is defined by: \\[\\textbf{BMI}=703\\times \\frac{\\text{weight (lb)}}{ \\text{(height (in)})^2}\\] Suppose the variable \\(\\texttt{weight\\_pound}\\) is the weights of seven Lehigh students. Also, the corresponding height observations in inches are \\[70,\\;72,\\;72.5,\\;66,\\;74,\\;66.5,\\;72.\\]\n\n\n\nSave the height observations in a variable by using a descriptive name. (Uncomment and use the data.)\nCalculate the BMIs of the seven students.\nCompute the mean and median of the BMIs .\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPeople often underreport how frequently they engage in antisocial behaviors like peeing in swimming pools. Urine, beyond being unpleasant, reacts with chlorine to produce toxic chemicals like trichloramine, a common cause of skin irritation for swimmers. Researchers found that the artificial sweetener ACE, which passes through the body unmetabolized and in consistent amounts, can be used to measure the amount of urine in a pool by analyzing ACE concentrations. Below is a list of ACE concentrations (measured in ng/L) from 15 different pools in the US: \\[ 438,  211,  640,   85,   83,  350,  138,   49,  465,  489,55, 1086,   71, 1058,  247.\\]\n\n\n\nIn R, create a vector of these data and give it an appropriate name. (Uncomment and use the data.)\nWhat is the mean ACE concentration in these 15 pools?\nSince urine contains an average ACE of 4000 ng/ml, we can obtain the urin concentration (ml/L) by dividing each value by 4000 from the ACE concentration data. Compute the urin concentration and it a suitable name.\nWhat is the mean urine concentration (in ml) per liter?\nUse R to calculate the average amount of urine (in ml) in a 500,000 L pool.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 2"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Lab_1.html",
    "href": "Lab_1.html",
    "title": "Lab 1",
    "section": "",
    "text": "You can type commands in the “Console”.\nType “2+2” and then hit “Shift+Return” or click the “Run Code” icon. You’ll see that R can perform simple calculations, just like a calculator. The result, 4, will appear, with a “[1]” label indicating that this is the first element of the output. While this labeling may seem unnecessary for simple answers, it becomes quite helpful for more complex outputs.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nIn your code scripts, it’s often useful to include text that isn’t evaluated by R. This allows you to leave notes for yourself or a friend about what the next line of code does, its strengths and limitations, or any other information you want to remember. To add a comment, start the line with the hash symbol “#”. R will ignore everything on that line after the “#”.\n\n\nLet us try the rest of the fundamental arithmetic operations:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nYou can use a variety of mathematical functions for calculations. For example, log() calculates the natural logarithm of a number.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nParentheses serve two purposes in R: they group elements within calculations and denote the arguments passed to functions. The “arguments” of a function refer to the values provided as input. For example, in “log(3)”, the “log()” function is applied to the argument “3”.\nSimilarly, we can also use “exp()” for the exponential function.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAnother useful mathematical function is “sqrt()”, which calculates the square root of a number. For example, “sqrt(4)” returns:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nTo calculate a value with an exponent, used the “^” symbol. For example \\(4^3\\) is written as:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nLet us compute the following mathematical expression: \\[\\frac{1}{\\sqrt{2\\pi} 0.5}\\log\\left(\\frac{(12-10.8)^2}{0.4}\\right).\\]\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nIn R, we can store information by assigning it to objects. For example, to create an object named “x” with a value of “24”, you can write:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThe part in the middle—a less-than sign followed by a hyphen, resembling a left-facing arrow—indicates to R that the value on the right should be assigned to the object on the left. After executing the command, whenever we use “x”, it will be replaced by its value, “24”. For instance, if we add “12” to “x”, we should expect a result of “36”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYou can reassign a new value to a object. E.g.,\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nCalculate the following math expressions.\n\n\n\n\\((23\\times 6)+3\\).\n\\(13^3-1100\\).\n\\(\\log(23)\\) with the natural log.\n\\(\\sqrt{81}/(3^3)\\).\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease complete the following semester start survey. Participation is voluntary, and you may choose to skip any questions: Give Us Your Input",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 1"
    ]
  },
  {
    "objectID": "Lab_1.html#command-line",
    "href": "Lab_1.html#command-line",
    "title": "Lab 1",
    "section": "",
    "text": "You can type commands in the “Console”.\nType “2+2” and then hit “Shift+Return” or click the “Run Code” icon. You’ll see that R can perform simple calculations, just like a calculator. The result, 4, will appear, with a “[1]” label indicating that this is the first element of the output. While this labeling may seem unnecessary for simple answers, it becomes quite helpful for more complex outputs.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 1"
    ]
  },
  {
    "objectID": "Lab_1.html#comments",
    "href": "Lab_1.html#comments",
    "title": "Lab 1",
    "section": "",
    "text": "In your code scripts, it’s often useful to include text that isn’t evaluated by R. This allows you to leave notes for yourself or a friend about what the next line of code does, its strengths and limitations, or any other information you want to remember. To add a comment, start the line with the hash symbol “#”. R will ignore everything on that line after the “#”.\n\n\nLet us try the rest of the fundamental arithmetic operations:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 1"
    ]
  },
  {
    "objectID": "Lab_1.html#mathematical-functions",
    "href": "Lab_1.html#mathematical-functions",
    "title": "Lab 1",
    "section": "",
    "text": "You can use a variety of mathematical functions for calculations. For example, log() calculates the natural logarithm of a number.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nParentheses serve two purposes in R: they group elements within calculations and denote the arguments passed to functions. The “arguments” of a function refer to the values provided as input. For example, in “log(3)”, the “log()” function is applied to the argument “3”.\nSimilarly, we can also use “exp()” for the exponential function.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAnother useful mathematical function is “sqrt()”, which calculates the square root of a number. For example, “sqrt(4)” returns:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nTo calculate a value with an exponent, used the “^” symbol. For example \\(4^3\\) is written as:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nLet us compute the following mathematical expression: \\[\\frac{1}{\\sqrt{2\\pi} 0.5}\\log\\left(\\frac{(12-10.8)^2}{0.4}\\right).\\]\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 1"
    ]
  },
  {
    "objectID": "Lab_1.html#defining-objects",
    "href": "Lab_1.html#defining-objects",
    "title": "Lab 1",
    "section": "",
    "text": "In R, we can store information by assigning it to objects. For example, to create an object named “x” with a value of “24”, you can write:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThe part in the middle—a less-than sign followed by a hyphen, resembling a left-facing arrow—indicates to R that the value on the right should be assigned to the object on the left. After executing the command, whenever we use “x”, it will be replaced by its value, “24”. For instance, if we add “12” to “x”, we should expect a result of “36”.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYou can reassign a new value to a object. E.g.,\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 1"
    ]
  },
  {
    "objectID": "Lab_1.html#lab-questions",
    "href": "Lab_1.html#lab-questions",
    "title": "Lab 1",
    "section": "",
    "text": "Calculate the following math expressions.\n\n\n\n\\((23\\times 6)+3\\).\n\\(13^3-1100\\).\n\\(\\log(23)\\) with the natural log.\n\\(\\sqrt{81}/(3^3)\\).\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease complete the following semester start survey. Participation is voluntary, and you may choose to skip any questions: Give Us Your Input",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 1"
    ]
  },
  {
    "objectID": "Lab_2.html#variable-names",
    "href": "Lab_2.html#variable-names",
    "title": "Lab 2",
    "section": "",
    "text": "While defining variables (objects), the significance of variable naming in programming is immense. Selecting clear and descriptive names for variables is vital for several reasons:\n\nReadability and Understandability: Clear and descriptive variable names enhance the readability and comprehension of your code.\nMaintainability and Debugging: Thoughtfully named variables simplify code maintenance and debugging processes.\nCollaboration: In a team setting, consistent and clear variable naming conventions are crucial for effective collaboration.\nSelf-Documentation: Meaningful variable names serve as self-documentation, making the code more intuitive.\nCode Reusability: Adopting good variable naming practices supports greater code reusability.\n\nSometimes, clear naming requires using multiple words in a variable name, but spaces are not allowed. A common approach is to separate words with underscores, as demonstrated previously, such as \\(\\texttt{morning\\_temperature\\_august}\\).\n\n\nLet us assign relevant names to the following variables:\n\n\n\n#\nFeature\nValue\n\n\n\n\n1\nBody temperature in Fahrenheit\n98\n\n\n2\nNumber of shoes for Sam\n11\n\n\n3\nWeight of a elephant in pound\n12,050\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 2"
    ]
  },
  {
    "objectID": "Lab_2.html#basic-r-object-vector",
    "href": "Lab_2.html#basic-r-object-vector",
    "title": "Lab 2",
    "section": "",
    "text": "A vector is a sequence of finite elements and serves as the basic object in R. For example, a single number like “3” is considered a vector of length 1. To create a vector, we use the \\(\\texttt{c()}\\) function, where the name is an abbreviation of “combine.”\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAs learned, we can assign a descriptive variable name to the vector:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nOne of the powerful features of vectors in R is the ability to perform the same calculation on every element with a single command, i.e., element-wise operation. For example, when converting weights from pounds to kilograms, we can multiply 0.454. This operation can be applied to all the numbers in a vector simultaneously:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nTo access a specific number in a vector, you add square brackets after the vector name and place the index of the desired element inside the brackets. The “index” refers to the position of the item within the vector, with the first element having an index of 1, and so on. For example, the third element of the vector \\(\\texttt{weight\\_kg}\\) is:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 2"
    ]
  },
  {
    "objectID": "Lab_2.html#measure-of-center",
    "href": "Lab_2.html#measure-of-center",
    "title": "Lab 2",
    "section": "",
    "text": "As we discussed in class, we can use the “mean” and “median” to measure the central tendency of our data, with the mode also being an option in some cases. In R, the functions \\(\\texttt{mean()}\\) and \\(\\texttt{median()}\\) can be used to obtain the mean and median of a vector, respectively.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 2"
    ]
  },
  {
    "objectID": "Lab_2.html#summation-and-length",
    "href": "Lab_2.html#summation-and-length",
    "title": "Lab 2",
    "section": "",
    "text": "We can also easily calculate the summation and length of a vector by using the functions, \\(\\texttt{sum()}\\) and \\(\\texttt{length()}\\).\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nCompute the mean of \\(\\texttt{weight\\_kg}\\) by using \\(\\texttt{sum()}\\) and \\(\\texttt{length()}\\) functions. (Do not use \\(\\texttt{mean()}\\) function.)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 2"
    ]
  },
  {
    "objectID": "Lab_2.html#lab-questions",
    "href": "Lab_2.html#lab-questions",
    "title": "Lab 2",
    "section": "",
    "text": "BMI is a measurement of a person’s leanness or corpulence based on their height and weight, and is intended to quantify tissue mass. It is widely used as a general indicator of whether a person has a healthy body weight for their height and it is defined by: \\[\\textbf{BMI}=703\\times \\frac{\\text{weight (lb)}}{ \\text{(height (in)})^2}\\] Suppose the variable \\(\\texttt{weight\\_pound}\\) is the weights of seven Lehigh students. Also, the corresponding height observations in inches are \\[70,\\;72,\\;72.5,\\;66,\\;74,\\;66.5,\\;72.\\]\n\n\n\nSave the height observations in a variable by using a descriptive name. (Uncomment and use the data.)\nCalculate the BMIs of the seven students.\nCompute the mean and median of the BMIs .\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPeople often underreport how frequently they engage in antisocial behaviors like peeing in swimming pools. Urine, beyond being unpleasant, reacts with chlorine to produce toxic chemicals like trichloramine, a common cause of skin irritation for swimmers. Researchers found that the artificial sweetener ACE, which passes through the body unmetabolized and in consistent amounts, can be used to measure the amount of urine in a pool by analyzing ACE concentrations. Below is a list of ACE concentrations (measured in ng/L) from 15 different pools in the US: \\[ 438,  211,  640,   85,   83,  350,  138,   49,  465,  489,55, 1086,   71, 1058,  247.\\]\n\n\n\nIn R, create a vector of these data and give it an appropriate name. (Uncomment and use the data.)\nWhat is the mean ACE concentration in these 15 pools?\nSince urine contains an average ACE of 4000 ng/ml, we can obtain the urin concentration (ml/L) by dividing each value by 4000 from the ACE concentration data. Compute the urin concentration and it a suitable name.\nWhat is the mean urine concentration (in ml) per liter?\nUse R to calculate the average amount of urine (in ml) in a 500,000 L pool.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Home",
      "Lab Sessions",
      "Lab 2"
    ]
  }
]