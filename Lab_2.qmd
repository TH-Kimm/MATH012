---
title: "Lab 2"
webr:
  show-startup-message: true
---
::: {.hidden}
\let\OldTexttt\texttt
\renewcommand{\txt}[1]{\OldTexttt{\color{brown}{#1}}}
:::

# Introduction to R (II)

## Basic **R** Object: Vector

A vector is a sequence of finite elements and serves as the basic object in **R**. For example, a single number like "3" is considered a vector of length 1. It is a highly relevant object from a statistical perspective, as it allows us to store variables in vector objects. To create a vector, we use the $\txt{c()}$ function, where the name is an abbreviation of **"combine"**. For example, suppose we need to create a vector for a set of elements representing weight observations.

```{webr-r}
c(150.2,178.6,190,144.3,202.2,165,163.5)
```

As learned, we can assign a descriptive variable name to the vector:

```{webr-r}
weight_pound <- c(150.2,178.6,190,144.3,202.2,165,163.5)
weight_pound
```

Remark: We can condense the double line process (saving and printing) into a single line by wrapping the assignment process with the $\txt{print()}$ function.

```{webr-r}
print(weight_pound <- c(150.2,178.6,190,144.3,202.2,165,163.5))
```

If we want to create an integer vector, then the $\txt{:}$ operator or $\txt{seq()}$ function offer efficient solutions.

```{webr-r}
print(loss <- 1:7)
print(half_sequence <- seq(1,10,by=0.5))
## Use ?seq for further information.
## Quick Question: 
## Is it possible to recreate "half_sequence" using the : operator?
```

Of course, we can combine two vectors by using the $\txt{c()}$ function again.

```{webr-r}
c(weight_pound,half_sequence)
```

## Vector Operations in **R**

One of the powerful features of vectors in **R** is the ability to perform the same calculation on every element with a single command, i.e., element-wise operation. For example, when converting weights from pounds to kilograms, we can multiply 0.454. This operation can be applied to all the numbers in a vector simultaneously:

```{webr-r}
print(weight_kg <- weight_pound * 0.454)
```

The operation between two vectors is also element-wise in **R**.

```{webr-r}
weight_kg
loss
print(weight_update <- weight_kg - loss)
```

## Vector Subsetting

To access a specific element in a vector, you add square brackets after the vector name and place the index of the desired element inside the brackets. The "index" refers to the position of the item within the vector, with the first element having an index of 1, and so on. For example, suppose we want to subset the vector $\txt{weight\_pound}$:

```{webr-r}
weight_pound
## The third element.
weight_pound[3]
```

It is also possible to extract multiple elements in a vector.

```{webr-r}
weight_pound
## the first three elements.
weight_pound[1:3]
## The first and last elements.
weight_pound[c(1,7)]
```

Lastly, we can exclude particular elements.

```{webr-r}
weight_pound
## exclude the first element.
weight_pound[-1]
## exclude the first and last elements.
weight_pound[-c(1,7)]
```

#### Example

Consider the vector $\txt{weight\_update}$:

1.  Extract the fifth and sixth elements.
2.  Extract the last four elemtns.
3.  Extract all but the last elements.

```{webr-r}
## 1

## 2

## 3
```

## Length

When the number of elements in a vector (equivalently, the number of observations in a variable, or simply the sample size) is unknown, we can simply use the $\txt{length()}$ function to obtain this information.

```{webr-r}
length(weight_pound)
length(c(weight_pound,half_sequence))
```

## Summation

We can also easily calculate the summation of a vector by using the functions, $\txt{sum()}$.

```{webr-r}
sum(weight_pound)
sum(weight_kg)
```

## Measure of Center

As we discussed in class, we can use the "mean" and "median" to measure the central tendency of our data, with the mode also being an option in some cases. In **R**, the functions $\txt{mean()}$ and $\txt{median()}$ can be used to obtain the mean and median of a vector, respectively.

```{webr-r}
mean(weight_pound)
median(weight_pound)
```

#### Example

Compute the mean of $\txt{weight\_kg}$ by using $\txt{sum()}$ and $\txt{length()}$ functions. (Do not use $\txt{mean()}$ function.)

```{webr-r}
# mean weight in kilograms

```

## Lab Questions

1.  BMI is a measurement of a person's leanness or corpulence based on their height and weight, and is intended to quantify tissue mass. It is widely used as a general indicator of whether a person has a healthy body weight for their height and it is defined by: $$\textbf{BMI}=703\times \frac{\text{weight (lb)}}{ \text{(height (in)})^2}$$ Suppose the previously obtained vector $\txt{weight\_pound}$ is the weights of seven Lehigh students. Also, the corresponding height observations in inches are $$70,\;72,\;72.5,\;66,\;74,\;66.5,\;72.$$

<!-- -->

i)  Save the height observations in a vector by using a descriptive name.
ii) Calculate the BMIs of the seven students.
iii) Compute the mean and median of the BMIs.
iv) Compute the mean BMI of the first three students and the mean BMI of the last four students.

```{webr-r}
## i

## ii

## iii

## iv
```

````{=html}
<!--
2. People often underreport how frequently they engage in antisocial behaviors like peeing in swimming pools. Urine, beyond being unpleasant, reacts with chlorine to produce toxic chemicals like trichloramine, a common cause of skin irritation for swimmers. Researchers found that the artificial sweetener ACE, which passes through the body unmetabolized and in consistent amounts, can be used to measure the amount of urine in a pool by analyzing ACE concentrations.
Below is a list of ACE concentrations (measured in ng/L) from 15 different pools in the US:
$$ 438,  211,  640,   85,   83,  350,  138,   49,  465,  489,55, 1086,   71, 1058,  247.$$



i) In **R**, create a vector of these data and give it an appropriate name. (Uncomment and use the data.)

ii) What is the mean ACE concentration in these 15 pools?

iii) Since urine contains an average ACE of 4000 ng/ml, we can obtain the urin concentration (ml/L) by dividing each value by 4000 from the ACE concentration data. Compute the urin concentration and it a suitable name.

iv) What is the mean urine concentration (in ml) per liter? 

v) Use R to calculate the average amount of urine (in ml) in a 500,000 L pool.

```{webr-r}
## i
# 438,211,640,85,83,350,138,49,465,489,55,1086,71,1058,247

## ii

## iii

## iv

## v

```
 -->
````


**Click [HERE](https://coursesite.lehigh.edu/mod/quiz/view.php?id=5901189){target="_blank"} to submit your answers.**
