---
title: "Lab 11"
webr:
  show-startup-message: true
---

```{webr-r}
#| context: setup
Survey_Data<-structure(list(Sports = c("MLB", "NFL", "NHL", "Other", "NBA", 
"NHL", "NBA", "NFL", "NBA", "MLB", "NHL", "Other", "NBA", "Other", 
"NBA", "MLB", "NBA", "NFL", "MLB", "NFL", "NBA", "Other", "MLB", 
"Other", "Other", "NFL", "NFL", "NFL", "NHL", "Other", "NFL", 
"Other", "MLB", "NBA", "MLB", "NBA", "NBA", "Other", "NHL", "MLB", 
"NFL", "Other", "NFL", "NBA", "NFL", "Other", "NFL", "Other", 
"MLB", "NFL", "NFL", "Other", "NBA", "MLB", "Other", "NBA", "Other", 
"Other", "NBA", "Other", "NHL", "NBA", "NFL", "NFL", "Other", 
"Other", "MLB", "NFL", "NBA", "NBA", "Other", "NBA", "NBA", "NHL", 
"Other", "NFL", "Other", "NFL", "NFL", "NBA", "NBA", "Other", 
"NHL", "NFL", "MLB", "NBA", "NFL", "Other", "NHL", "MLB", "NHL", 
"NBA", "NHL", "Other", "Other", "NFL", "NBA", "NBA", "MLB", "MLB", 
"NHL", "MLB", "NBA", "NFL", "NFL", "NFL", "Other", "Other", "Other", 
"Other", "NBA", "Other", "NFL", "NBA", "NHL", "Other", "MLB", 
"NFL", "NBA", "Other", "NFL", "NBA", "NFL", "Other", "Other", 
"NFL", "NFL", "NBA", "NBA", "NFL", "Other", "NBA", "NBA", "NFL", 
"MLB", "NHL"), States = c(23L, 20L, 3L, 9L, 11L, 20L, 15L, 13L, 
20L, 15L, 10L, 15L, 12L, 6L, 16L, 17L, 20L, 9L, 15L, 17L, 12L, 
7L, 12L, 9L, 14L, 15L, 6L, 18L, 17L, 15L, 5L, 10L, 16L, 27L, 
13L, 15L, 30L, 5L, 15L, 14L, 13L, NA, 30L, 18L, 23L, 8L, 18L, 
20L, 18L, 15L, 14L, 16L, 24L, 13L, 28L, 3L, 13L, 19L, 18L, 7L, 
36L, 3L, 10L, 26L, 12L, 8L, 18L, 10L, 6L, 18L, 18L, 20L, 20L, 
10L, 26L, 5L, 8L, 7L, 20L, 6L, 22L, 10L, 15L, 15L, 25L, 5L, 12L, 
5L, 10L, 11L, 4L, 6L, 9L, 7L, 5L, 10L, 15L, 14L, 19L, 15L, 12L, 
11L, 3L, 6L, 15L, 6L, 15L, 5L, 12L, 13L, 4L, 1L, 15L, 35L, 8L, 
9L, 17L, 5L, 5L, 8L, 3L, 2L, 10L, 15L, 17L, 12L, 13L, 5L, 12L, 
15L, 2L, 8L, 13L, 27L, 1L, 16L), Cat_Dog = c("Dog", "Dog", "Dog", 
"Cat", "Dog", "Cat", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", 
"Other", "Cat", "Dog", "Cat", "Dog", "Dog", "Dog", "Dog", "Dog", 
"Dog", "Dog", "Dog", "Dog", "Dog", "Cat", "Dog", "Cat", "Dog", 
"Dog", "Other", "Dog", "Dog", "Dog", "Dog", "Cat", "Cat", "Dog", 
"Dog", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", "Cat", 
"Dog", "Cat", "Dog", "Cat", "Dog", "Dog", "Cat", "Cat", "Cat", 
"Dog", "Dog", "Cat", "Dog", "Cat", "Dog", "Dog", "Dog", "Dog", 
"Cat", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", 
"Dog", "Dog", "Dog", "Dog", "Dog", "Cat", "Dog", "Dog", "Dog", 
"Dog", "Dog", "Dog", "Cat", "Dog", "Dog", "Dog", "Dog", "Dog", 
"Dog", "Cat", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", 
"Cat", "Dog", "Dog", "Dog", "Dog", "Cat", "Dog", "Dog", "Cat", 
"Cat", "Dog", "Dog", "Dog", "Dog", "Dog", "Other", "Other", "Cat", 
"Dog", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", "Dog", 
"Dog", "Cat", "Cat", "Dog", "Dog", "Dog", "Dog"), Pets = c(1L, 
1L, 1L, 0L, 0L, 2L, 1L, 1L, 2L, 0L, 1L, 1L, 0L, 0L, 0L, 1L, 1L, 
0L, 0L, 1L, 2L, 4L, 1L, 4L, 1L, 1L, 1L, 2L, 3L, 0L, 2L, 1L, 0L, 
2L, 1L, 2L, 1L, 3L, 1L, 2L, 1L, 2L, 6L, 3L, 1L, 1L, 1L, 0L, 1L, 
1L, 1L, 0L, 0L, 2L, 8L, 1L, 2L, 1L, 0L, 0L, 3L, 2L, 0L, 1L, 1L, 
4L, 0L, 1L, 2L, 1L, 3L, 1L, 0L, 0L, 2L, 1L, 1L, 1L, 0L, 1L, 2L, 
1L, 2L, 1L, 1L, 1L, 2L, 0L, 1L, 0L, 2L, 1L, 4L, 3L, 1L, 0L, 2L, 
1L, 1L, 0L, 2L, 2L, 2L, 3L, 3L, 2L, 0L, 2L, 2L, 1L, 0L, 2L, 1L, 
1L, 7L, 0L, 1L, 0L, 0L, 0L, 0L, 1L, 1L, 3L, 2L, 1L, 1L, 1L, 1L, 
0L, 0L, 0L, 1L, 1L, 1L, 0L), Gender = c("Female", "Female", "Male", 
"Male", "Female", "Female", "Female", "Male", "Female", "Female", 
"Female", "Female", "Male", "Female", "Female", "Female", "Female", 
"Female", "Male", "Female", "Female", "Female", "Female", "Female", 
"Male", "Female", "Female", "Male", NA, "Male", "Male", "Female", 
"Female", "Female", "Female", "Female", "Male", "Female", "Female", 
"Female", "Male", "Female", "Female", "Female", "Female", "Female", 
"Female", "Male", "Female", "Female", "Female", "Female", NA, 
"Female", "Female", "Female", "Female", "Female", "Female", "Female", 
"Male", "Male", "Male", "Female", NA, "Female", "Female", "Female", 
"Male", "Female", "Female", "Male", "Male", "Female", "Male", 
"Female", "Female", "Female", "Female", "Male", "Male", "Female", 
"Female", "Female", "Male", "Female", "Female", "Male", "Female", 
"Female", "Female", "Male", "Female", "Female", "Male", "Female", 
"Female", "Male", "Female", "Female", "Female", "Female", "Male", 
"Female", "Male", "Female", "Male", "Male", "Male", "Female", 
"Male", "Male", "Female", "Female", "Male", "Female", "Female", 
"Female", "Female", "Female", "Female", "Male", "Female", "Female", 
"Female", "Female", "Male", "Female", "Female", "Female", "Female", 
"Male", "Female", "Male", "Female", "Male"), Browser = c("Safari", 
"Chrome", "Chrome", "Safari", "Safari", "Chrome", "Chrome", "Chrome", 
"Chrome", "Safari", "Chrome", "Chrome", "Chrome", "Chrome", "Chrome", 
"Edge", "Chrome", "Chrome", "Chrome", "Chrome", "Chrome", "Chrome", 
"Safari", "Safari", "Firefox", "Chrome", "Chrome", "Safari", 
"Chrome", "Chrome", "Safari", "Chrome", "Chrome", "Chrome", "Chrome", 
"Safari", "Chrome", "Chrome", "Safari", "Safari", "Chrome", "Safari", 
"Safari", "Safari", "Chrome", "Safari", "Chrome", "Firefox", 
"Safari", "Chrome", "Safari", "Chrome", "Safari", "Chrome", "Chrome", 
"Safari", "Safari", "Safari", "Chrome", "Chrome", "Chrome", "Chrome", 
"Chrome", "Chrome", "Chrome", "Chrome", "Chrome", "Chrome", "Other", 
"Chrome", "Safari", "Chrome", "Chrome", "Chrome", "Chrome", "Safari", 
"Chrome", "Safari", "Chrome", "Chrome", "Chrome", "Safari", "Chrome", 
"Chrome", "Chrome", "Chrome", "Chrome", "Other", "Chrome", "Safari", 
"Chrome", "Chrome", "Chrome", "Safari", "Edge", "Chrome", "Chrome", 
"Safari", "Safari", "Chrome", "Safari", "Safari", "Edge", "Safari", 
"Chrome", "Chrome", "Other", "Firefox", "Chrome", "Chrome", "Chrome", 
"Chrome", "Chrome", "Chrome", "Safari", "Chrome", "Chrome", "Safari", 
"Safari", "Chrome", "Chrome", "Safari", "Chrome", "Safari", "Safari", 
"Chrome", "Chrome", "Chrome", "Chrome", "Chrome", "Chrome", "Chrome", 
"Chrome", "Chrome", "Edge", "Chrome"), Shoes = c(8L, 10L, 4L, 
7L, 25L, 30L, 8L, 9L, 17L, 11L, 30L, NA, 6L, 10L, 12L, 12L, 10L, 
8L, 6L, 10L, 8L, NA, 4L, 12L, 3L, 10L, 20L, 6L, 8L, 6L, 11L, 
11L, 13L, 10L, 6L, 5L, 12L, 6L, 10L, 5L, 5L, 23L, 15L, 20L, 8L, 
10L, 8L, 5L, 20L, 10L, 8L, 7L, 13L, 8L, 5L, 6L, 15L, 6L, 17L, 
4L, 9L, 10L, 3L, 25L, 15L, 4L, NA, 13L, 5L, 5L, 6L, 8L, 8L, 10L, 
18L, 12L, 20L, 35L, 10L, 3L, 4L, 4L, 21L, 15L, 2L, 6L, 15L, 5L, 
6L, 9L, 8L, 3L, 7L, 10L, 4L, 20L, 6L, 20L, 9L, 10L, 15L, 8L, 
9L, 10L, 8L, 8L, 3L, 2L, 3L, 10L, 3L, 5L, 5L, 14L, 4L, 9L, 10L, 
6L, 6L, 9L, 9L, 5L, 6L, 7L, 10L, 15L, 8L, 20L, 20L, 7L, NA, 5L, 
71L, 18L, 5L, 10L), Height = c(62L, 62L, 70L, 72L, 66L, 70L, 
64L, 69L, 64L, 67L, 61L, 64L, 73L, 66L, 63L, 67L, 65L, 64L, 75L, 
61L, 66L, 61L, NA, NA, 70L, 66L, 62L, 66L, 64L, 65L, 68L, 65L, 
65L, 66L, 65L, NA, 70L, 60L, 63L, 70L, 74L, 63L, 64L, 68L, 68L, 
64L, 61L, 70L, 62L, 67L, 64L, 61L, 70L, 64L, 65L, NA, NA, 69L, 
65L, 66L, 71L, 72L, 69L, 70L, 64L, 67L, 63L, 66L, 71L, 64L, 63L, 
70L, 72L, 69L, 72L, 60L, 68L, 62L, 67L, 67L, 72L, 65L, 65L, 66L, 
70L, 66L, 63L, 66L, 65L, 63L, 63L, 67L, 69L, 65L, 72L, 65L, 67L, 
NA, 65L, 64L, 63L, 61L, 68L, 63L, 72L, 62L, 73L, 69L, 71L, 68L, 
73L, 73L, 63L, 68L, 63L, 67L, 62L, 65L, 65L, 63L, 61L, 63L, 66L, 
63L, 62L, 64L, 64L, 66L, 63L, 63L, NA, 69L, 63L, 73L, 60L, 72L
), MO_Height = c(62L, 64L, 64L, 64L, 66L, 65L, 62L, 65L, 64L, 
65L, 64L, 66L, 64L, 64L, 61L, 67L, 69L, 67L, 67L, 59L, 66L, NA, 
NA, NA, 65L, 65L, 67L, 60L, 65L, 60L, 67L, 62L, 65L, 66L, 64L, 
NA, 62L, 62L, 64L, 66L, 68L, 60L, 61L, 65L, 66L, 61L, 64L, 65L, 
62L, 63L, 65L, 59L, 69L, 62L, 63L, NA, NA, 68L, 68L, 65L, 61L, 
67L, 62L, 68L, 64L, NA, 67L, 66L, 64L, 62L, 67L, 64L, 60L, 67L, 
65L, 60L, 66L, 63L, 66L, 59L, 65L, NA, 68L, 65L, 61L, 67L, 65L, 
64L, 65L, 65L, 62L, 59L, 64L, 64L, 67L, 67L, 69L, NA, 65L, 62L, 
68L, 64L, 65L, 61L, 67L, 64L, 68L, NA, 65L, 64L, NA, NA, 61L, 
65L, 60L, 65L, 59L, 64L, 64L, 63L, 59L, 54L, 67L, 65L, 65L, 65L, 
63L, 62L, 61L, 64L, NA, 67L, 65L, 66L, 63L, 63L), FA_Height = c(70L, 
67L, 66L, 69L, 70L, 76L, 69L, 70L, 70L, 74L, 69L, 74L, 68L, 67L, 
68L, 72L, 74L, 70L, 72L, 74L, 74L, NA, NA, NA, 71L, 76L, 71L, 
64L, 73L, 69L, 70L, 70L, 71L, 70L, 64L, NA, 68L, 67L, 69L, 73L, 
60L, 70L, 68L, 62L, 71L, 68L, 69L, 69L, 70L, 71L, 71L, 65L, 67L, 
68L, 67L, NA, NA, 71L, 71L, 73L, 65L, 67L, 68L, 76L, 70L, NA, 
70L, 72L, 64L, 71L, 70L, 72L, 74L, 70L, 70L, NA, 67L, 70L, 70L, 
67L, 75L, 70L, 71L, 71L, 72L, 62L, 74L, 65L, 72L, 70L, 69L, 67L, 
71L, 67L, 70L, 74L, 71L, NA, 73L, 71L, 71L, 68L, 68L, NA, 72L, 
67L, 70L, NA, 72L, 78L, NA, NA, 65L, 69L, 65L, 69L, 66L, 64L, 
64L, 68L, 70L, 58L, 71L, 71L, 67L, 71L, 69L, 71L, 70L, 71L, NA, 
68L, 74L, 68L, 65L, 70L), Arrival = c(7L, 150L, 10L, 25L, 11L, 
10L, 15L, 8L, NA, 4L, 20L, 15L, 5L, 10L, 15L, 10L, 10L, 15L, 
NA, 7L, 10L, NA, 7L, 15L, 5L, 17L, 15L, 15L, 6L, 10L, 10L, 10L, 
12L, 10L, NA, 15L, 10L, 5L, 5L, 5L, 10L, 20L, 9L, 10L, 7L, 6L, 
10L, 30L, 10L, 10L, 7L, 9L, 10L, 16L, NA, 10L, 9L, 8L, 7L, 20L, 
4L, 30L, 15L, 5L, 10L, 15L, 5L, 10L, 15L, 15L, 10L, 9L, 8L, 7L, 
10L, 15L, 7L, 13L, 25L, 20L, 7L, 10L, 5L, 10L, 10L, 5L, 10L, 
9L, 10L, 15L, 9L, 20L, 13L, 10L, 7L, 3L, NA, 10L, 7L, 10L, 8L, 
8L, 15L, 5L, 10L, 10L, 10L, 30L, 10L, 5L, 10L, 13L, 8L, 10L, 
NA, 10L, 10L, 8L, 8L, NA, 12L, 3L, 6L, 10L, 10L, 10L, 10L, 7L, 
15L, 15L, 60L, 7L, 15L, 6L, 15L, 10L), Sleep = c(9.5, 9, 8, 7.5, 
5.5, 7, 8, 4, 8, 8, 8.5, 6.5, 5, 5, 7.5, 8.5, 7, 7.5, 6, 8, 6.5, 
8, 5.5, 6, 8, 7.5, 8.5, 6, 5.5, 8, 7, 6.5, 8, 6.5, 7.5, 6, 6, 
8.5, 7, 7, 8, 9, 6, 8, 8, 6, 6.5, 10, 7, 10, 10, 6, 7, 9, 8.5, 
NA, 7, 8, 7.5, 7.5, 6.5, 8, 8, 9, 5, 6, 7.5, 8, 7, 8, 9, 6, 8, 
9, 7, 7, 8, 6, 8, 6, 8, 9, 10, 7.5, 7, 8, 8, 7, 8, 5, 8, 6, 7.5, 
7, 8, 7.5, 3, 8, 7, 7, 6, 7.5, 7.5, 8.5, 4, 8, 7, 9, 7, 5, 9, 
8, 7, 8.5, 8, 8, 8, 8, 8, 5, 5.5, 6, 8, 6.5, 9.5, 8, 8, 8, 8, 
5, 6, 8, 8, 9, 8, 6.5), Number = c(3L, 7L, 7L, 4L, 1L, 7L, 4L, 
2L, 4L, 3L, 7L, 6L, 4L, 8L, 8L, 4L, 4L, 7L, 7L, 8L, 2L, 10L, 
6L, 3L, 3L, 6L, 6L, 7L, 4L, 7L, 7L, 4L, 9L, 7L, 7L, 5L, 2L, 4L, 
9L, 4L, 1L, 2L, 8L, 3L, 2L, 2L, 8L, 3L, 5L, 6L, 3L, 3L, 3L, 6L, 
8L, 1L, 7L, 8L, 7L, 4L, 5L, 9L, 3L, 8L, 8L, 8L, 7L, 2L, 7L, 8L, 
6L, 10L, 7L, 9L, 7L, 4L, 5L, 7L, 2L, 2L, 2L, 3L, 7L, 3L, 10L, 
10L, 7L, 5L, 6L, 8L, 7L, 2L, 7L, 8L, 8L, 7L, 9L, 1L, 2L, 5L, 
7L, 5L, 7L, 3L, 6L, 10L, 4L, 3L, 7L, 4L, 7L, 4L, 5L, 2L, 7L, 
5L, 6L, 5L, 5L, 7L, 8L, 7L, 4L, 8L, 5L, 5L, 3L, 2L, 4L, 7L, 7L, 
5L, 4L, 4L, 7L, 7L), Hand = c("Right", "Right", "Right", "Right", 
"Right", "Right", "Right", "Right", "Right", "Right", "Right", 
"Right", "Right", "Right", "Right", "Right", "Right", "Right", 
"Right", "Right", "Right", "Right", "Right", "Right", "Ambidextrous", 
"Right", "Right", "Right", "Left", "Right", "Right", "Left", 
"Right", "Right", "Right", "Right", "Left", "Right", "Right", 
"Right", "Right", "Left", "Right", "Right", "Right", "Right", 
"Right", "Right", "Right", "Right", "Right", "Left", "Right", 
"Right", "Right", "Left", "Right", "Right", "Left", "Right", 
"Right", "Right", "Right", "Right", "Right", "Right", "Right", 
"Right", "Right", "Right", "Right", "Left", "Right", "Right", 
"Ambidextrous", "Right", "Right", "Right", "Right", "Right", 
"Right", "Right", "Right", "Right", "Right", "Right", "Right", 
"Left", "Right", "Right", "Right", "Right", "Right", "Right", 
"Right", "Right", NA, "Right", "Right", "Right", "Right", "Right", 
"Right", "Right", "Right", "Right", "Right", "Right", "Right", 
"Right", "Right", "Right", "Right", "Right", "Left", "Right", 
"Right", "Right", "Right", "Right", "Right", "Right", "Right", 
"Right", "Right", "Right", "Right", "Right", "Right", "Right", 
"Right", "Right", "Right", "Right", "Right", "Ambidextrous"), 
    Credit = c(9, 16, 17, 4, 16, 16, 16, 16, 16, 16, 16, 18, 
    16, 15, 17, 18, 17, 15, 14, 15, 16, 17, 16, 16, 18, 16, 15, 
    16, 17, 17, 16, 15, 15, 16, 15, 15, 15, 18, 16, 16, 12, 16, 
    16, 14, 12, 16, 17, 13, 15, 17, 15, 15, 17, 16, NA, 16, 14, 
    16, 15, 15, 18, 9, 13, 16, 13, 14, 17, 16, 14, 15, 18, 15, 
    14, 16, 18, 17, 16, 16, 17, 7, 18, 15, 15, 15, 15, 15, 17, 
    17, 16, 16, 15, 6, 15, 18, 15, 15, 18, 15, 15, 17, 13, 15, 
    16, 15, 18, 12, 17, 18, 16, 18, 15, 13, 12, 18, 16, 18, 15, 
    14, 14, 12, 14.5, 15, 15, 16, 16, 16, 16, 15, 16, 17, 16, 
    14, 15, 16, 16, 15.5)), class = "data.frame", row.names = c(NA, 
-136L))
attach(Survey_Data)
Survey_Data<-na.omit(Survey_Data)
```
::: {.hidden}
\let\OldTexttt\texttt
\renewcommand{\txt}[1]{\OldTexttt{\color{brown}{#1}}}
:::


# Inferential Statistics (II)

This week, let's delve into **hypothesis testing for the population mean**. For our discussion, let's suppose our interest lies in the population mean height, denoted as $\mu$, for **all Lehigh [female]{style="color:blue;"} students**. In this lab, let us presume the assumptions for the hypothesis testings are satisfied.

## Hypotheses Set-Up

First, let’s say we are interested in determining whether the population average height of female students exceeds 64.5 inches, and we aim to [statistically confirm this claim at a significance level of 0.1]{style="color:blue;"}. As mentioned, the population average (or mean) is denoted by the Greek letter $\mu$. Thus, we express our claim as the alternative hypothesis: $\mu > 64.5$. The null hypothesis, being the opposite, is $\mu \le 64.5$: $$
H_0:\; \mu \le 64.5 \;\;\text{vs.}\;\;H_a:\; \mu > 64.5.
$$ Note that the reference value, 64.5, is generally denoted as $\mu_0$. This test is referred to as a right-tailed test because we aim to show that the target parameter $\mu$ lies to the right of the reference value $\mu_0$.

## Sample Data

As the target parameter population mean is unknown, we need to collect a sample for inference. For this purpose, let's use the **Height** variable in a previous class survey data.

```{webr-r}
head(Survey_Data)
# Obtain the index of Female students
index <- (Survey_Data$Gender == "Female")
# Obtain the Height data of Female students using the index
X <- Survey_Data$Height[index]
```

## Choice of Test

Now, let us explore the height data vector $X$ and record necessary components.

```{webr-r}
# Sample Size
print(n<-length(X))
# Sample Mean 
print(xbar<-mean(X))
# Sample Standard Deviation
print(s<-sd(X))
# mu_0
mu0<-64.5
# significance level
alpha<-0.1
```

Here, the sample size is large $n\ge 30$, so we can use the [$z$ test statistic]{style="color:blue;"}: $$
Z^*=\frac{\bar{X}-\mu_0}{\sigma/\sqrt{n}}
$$ In particular, the population standard deviation $\sigma$ will be replaced by its sample counterpart, which we calculated earlier, as we are working with a large sample size.

```{webr-r}
# Z-test statistic
print(z.star<-(xbar-mu0)/(s/sqrt(n)))
```

## p-value

Once we have the test statistic, the next step is to calculate the corresponding p-value.\
In a z-test, the p-value is essentially one of the tail-probabilities from the standard normal distribution. Since this test is a **right-tailed** test, we calculate the right-tail probability. We could use a $z$-table; however, in **R**, the function $\txt{pnorm()}$ is used  to compute the left-tail probability, so $$
\text{p-value}=P[Z>z^*]=1-P[Z\le z^*]\stackrel{\textsf{R}}{=}\txt{1-pnorm(z.star)}.
$$

```{webr-r}
# p-value
print(p.value<-1-pnorm(z.star))
```

Note that [**a small p-value indicates a strong evidence against the Null Hypothesis in favor of Alternative Hypothesis, allowing us to reject the null hypothesis**]{style="color:blue;"}. But, how small is small enough? This is determined by comparing the p-value to the significance level.

```{webr-r}
# Conclusion
print(p.value <= alpha)
```

## Conclusion and Interpretation

In this case, we **fail to reject the null hypothesis**. Interpretation should be based on the context of the problem:\
[**"Given the significance level 0.1, there is not enough evidence that the population average height of all Lehigh female students is greater than 64.5 inches."**]{style="color:blue;"}.

## Small Sample Case

Now, let us consider a slightly different population parameter: the population average height of all Lehigh female students whose favorite professional sports is NBA. Regarding this target parameter, we wish to perform exactly the same right-tailed test. Let us explore the data.

```{webr-r}
# Select all the students whose favorite sports is basketball
index2 <- Survey_Data$Sports=="NBA"
# Select female students whose favorite sports is NBA
X.Sub <- Survey_Data$Height[index&index2]
# Sample Size
print(n <- length(X.Sub))
# Mean value
print(xbar <- mean(X.Sub))
# Standard deviation
print(s <- sd(X.Sub))

```

Note that the sample size of new data set is small ($n<30$). In this case, we have to use the [$t$-test]{style="color:blue;"}. (Let us presume the population distribution is normal to satisfy the assumption.) $$
T^*=\frac{\bar{X}-\mu_0}{s/\sqrt{n}}
$$

```{webr-r}
# t-test statistic
print(t.star <- (xbar-mu0)/(s/sqrt(n)))
```

For the p-value calculation, we now need to compute one of the tail probabilities of the t-distribution with the corresponding $n-1$ degrees of freedom. The t-table we use in class does not provide the exact probability, but the **R** function $\txt{pt()}$ can be used for the precise computation. Since this is still right-tailed test: $$
\text{p-value}=P[T>t^*]=1-P[T\le t^*]\stackrel{\textsf{R}}{=}\txt{1-pt(t.star,n-1)}.
$$

```{webr-r}
# p-value
print(p.value <- 1-pt(t.star,n-1))
# Conclusion
(p.value <= alpha)
```

Note that we can **reject the null hypothesis** in this sub-group analysis. Therefore,  
[**"Given the significance level 0.1, there is enough evidence that the population average height of all Lehigh female students who like the NBA is greater than 64.5 inches."**]{style="color:blue;"}.

## Lab Questions

Let us consider the population average height $\mu$ of all Lehigh [male]{style="color:blue;"} students. In particular, we are interested in whether the average height of the male students is less than 70 inches and wish to statistically confirm this claim with a 0.1 significance level.

1.  Choose the right form of the null and alternative hypotheses.

<!-- -->

i)  $H_0:\; \mu \le 70 \;\;\text{vs.}\;\;H_a:\; \mu > 70.$
ii) $H_0:\; \mu \ge 70 \;\;\text{vs.}\;\;H_a:\; \mu < 70.$
iii) $H_0:\; \mu < 70 \;\;\text{vs.}\;\;H_a:\; \mu \ge 70.$
iv) $H_0:\; \mu > 70 \;\;\text{vs.}\;\;H_a:\; \mu \le 70.$

<!-- -->

2.  Subset the relevant sample data and record the necessary component.\
    What would be your choice of the test? (Determine it solely based on the sample size.)

<!-- -->

i)  z-test
ii) t-test

```{webr-r}
index3 <- Survey_Data$Gender=="Male"
X<-
n<-
xbar<-
s<-
mu0<-
alpha<-
```

3.  Compute the test-statistic and calculate the p-value.

```{webr-r}

```

4.  Make a conclusion and choose the correct interpretation.

<!-- -->

i)  Reject $H_0$. There is enough evidence that the population average height of all Lehigh male students is less than 70.
ii) Reject $H_0$. There is not enough evidence that the population average height of all Lehigh male students is less than 70.
iii) Fail to reject $H_0$. There is enough evidence that the population average height of all Lehigh male students is less than 70.
iv) Fail to teject $H_0$. There is not enough evidence that the population average height of all Lehigh male students is less than 70.
